paste0("fit2")),
col=c("blue", "red"),
lty=1)
confusionMatrix(data = as.factor(fit1.pred.5),
reference = hd_data.f$HD,
positive = levels(hd_data.f$HD)[2])
fit1.threshold <- coords(fit1.roc, ret="threshold")
fit2.threshold <- coords(fit2.roc, ret="threshold")
fit1.ppv <- coords(fit1.roc, ret="ppv")
fit1.npv <- coords(fit1.roc, ret="npv")
fit2.ppv <- coords(fit2.roc, ret="ppv")
fit2.npv <- coords(fit2.roc, ret="npv")
# ppv
plot(fit1.threshold$threshold, fit1.ppv$ppv, type="l", col="blue", pch=16,
xlab="Threshold on prob",
ylab="False Positive",
main = "Thresholds vs. Positive Prediction Values",
sub = "Figure 4.1")
lines(fit2.threshold$threshold, fit2.ppv$ppv, col="red", lwd=3)
legend("bottomright",
c(paste0("fit1"),
paste0("fit2")),
col=c("blue", "red"),
lty=1)
# npv
plot(fit1.threshold$threshold, fit1.npv$npv, type="l", col="blue", pch=16,
xlab="Threshold on prob",
ylab="False Positive",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 4.1")
lines(fit2.threshold$threshold, fit2.npv$npv, col="red", lwd=3)
legend("bottomright",
c(paste0("fit1"),
paste0("fit2")),
col=c("blue", "red"),
lty=1)
hd_data.new
predict(aic_fit_final, hd_data.new, type="response")
fit.final.roc<- roc(hd_data.f$HD, aic_fit_final$fitted, plot=T, col="blue")
fit.final.roc$threshold
confusionMatrix(data = as.factor(fit1.pred.5),
reference = hd_data.f$HD,
positive = levels(hd_data.f$HD)[2])
fit1.threshold <- coords(fit1.roc, ret="threshold")
fit2.threshold <- coords(fit2.roc, ret="threshold")
fit1.ppv <- coords(fit1.roc, ret="ppv")
fit1.npv <- coords(fit1.roc, ret="npv")
fit2.ppv <- coords(fit2.roc, ret="ppv")
fit2.npv <- coords(fit2.roc, ret="npv")
# ppv
plot(fit1.threshold$threshold, fit1.ppv$ppv, type="l", col="blue", pch=16,
xlab="Threshold on prob",
ylab="ppv",
main = "Thresholds vs. Positive Prediction Values",
sub = "Figure 4.1")
lines(fit2.threshold$threshold, fit2.ppv$ppv, col="red", lwd=3)
legend("bottomright",
c(paste0("fit1"),
paste0("fit2")),
col=c("blue", "red"),
lty=1)
# npv
plot(fit1.threshold$threshold, fit1.npv$npv, type="l", col="blue", pch=16,
xlab="Threshold on prob",
ylab="npv",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 4.1")
lines(fit2.threshold$threshold, fit2.npv$npv, col="red", lwd=3)
legend("bottomright",
c(paste0("fit1"),
paste0("fit2")),
col=c("blue", "red"),
lty=1)
fit.all$BestModels
fit.all
fit.final.roc<- roc(hd_data.f$HD, aic_fit_final$fitted, plot=T, col="blue")
fit.final.threshold <- coords(fit.final.roc, ret="threshold")
fit.final.ppv <- coords(fit.final.roc, ret="ppv")
fit.final.npv <- coords(fit.final.roc, ret="npv")
# ppv
plot(fit.final.threshold$threshold, fit.final.ppv$ppv, type="l", col="blue", pch=16,
xlab="Threshold on prob",
ylab="ppv",
main = "Thresholds vs. Positive Prediction Values",
sub = "Figure 4.1")
#lines(fit2.threshold$threshold, fit2.ppv$ppv, col="red", lwd=3)
legend("bottomright",
c(paste0("fit1"),
paste0("fit2")),
col=c("blue", "red"),
lty=1)
# npv
plot(fit.final.threshold$threshold, fit.final.npv$npv, type="l", col="blue", pch=16,
xlab="Threshold on prob",
ylab="npv",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 4.2")
#lines(fit2.threshold$threshold, fit2.npv$npv, col="red", lwd=3)
legend("bottomright",
c(paste0("fit1"),
paste0("fit2")),
col=c("blue", "red"),
lty=1)
fit.final.roc<- roc(hd_data.f$HD, aic_fit_final$fitted, plot=T, col="green")
fit.final.threshold <- coords(fit.final.roc, ret="threshold")
fit.final.ppv <- coords(fit.final.roc, ret="ppv")
fit.final.npv <- coords(fit.final.roc, ret="npv")
# ppv
plot(fit.final.threshold$threshold, fit.final.ppv$ppv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="ppv",
main = "Thresholds vs. Positive Prediction Values",
sub = "Figure 4.1")
lines(fit1.threshold$threshold, fit1.ppv$ppv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.ppv$ppv, col="red", lwd=3)
legend("bottomright",
c(paste0("fit1"),
paste0("fit2")),
col=c("blue", "red"),
lty=1)
# npv
plot(fit.final.threshold$threshold, fit.final.npv$npv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="npv",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 4.2")
lines(fit1.threshold$threshold, fit1.ppv$npv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.npv$npv, col="red", lwd=3)
legend("bottomright",
c(paste0("fit1"),
paste0("fit2")),
col=c("blue", "red"),
lty=1)
knitr::opts_chunk$set(echo = FALSE, results = "hide", fig.width=8, fig.height=4)
options(scipen = 0, digits = 3)  # controls base R output
if(!require('pacman')) {install.packages('pacman')}
pacman::p_load(bestglm, glmnet, leaps, car, tidyverse, pROC, caret) # add the packages needed
fit.final.roc<- roc(hd_data.f$HD, aic_fit_final$fitted, plot=T, col="green")
fit.final.threshold <- coords(fit.final.roc, ret="threshold")
fit.final.ppv <- coords(fit.final.roc, ret="ppv")
fit.final.npv <- coords(fit.final.roc, ret="npv")
# ppv
plot(fit.final.threshold$threshold, fit.final.ppv$ppv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="ppv",
main = "Thresholds vs. Positive Prediction Values",
sub = "Figure 4.1")
lines(fit1.threshold$threshold, fit1.ppv$ppv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.ppv$ppv, col="red", lwd=3)
legend("bottomright",
c(paste0("finalfit"),
paste0("fit1"),
paste0("fit2")),
col=c("green", "blue", "red"),
lty=1)
# npv
plot(fit.final.threshold$threshold, fit.final.npv$npv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="npv",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 4.2")
lines(fit1.threshold$threshold, fit1.ppv$npv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.npv$npv, col="red", lwd=3)
legend("bottomright",
c(paste0("finalfit"),
paste0("fit1"),
paste0("fit2")),
col=c("green", "blue", "red"),
lty=1)
fit.final.roc<- roc(hd_data.f$HD, aic_fit_final$fitted, plot=T, col="green")
fit.final.threshold <- coords(fit.final.roc, ret="threshold")
fit.final.ppv <- coords(fit.final.roc, ret="ppv")
fit.final.npv <- coords(fit.final.roc, ret="npv")
# ppv
plot(fit.final.threshold$threshold, fit.final.ppv$ppv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="ppv",
main = "Thresholds vs. Positive Prediction Values",
sub = "Figure 4.1")
lines(fit1.threshold$threshold, fit1.ppv$ppv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.ppv$ppv, col="red", lwd=3)
legend("middle",
c(paste0("finalfit"),
paste0("fit1"),
paste0("fit2")),
col=c("green", "blue", "red"),
lty=1)
fit.final.roc<- roc(hd_data.f$HD, aic_fit_final$fitted, plot=T, col="green")
fit.final.threshold <- coords(fit.final.roc, ret="threshold")
fit.final.ppv <- coords(fit.final.roc, ret="ppv")
fit.final.npv <- coords(fit.final.roc, ret="npv")
# ppv
plot(fit.final.threshold$threshold, fit.final.ppv$ppv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="ppv",
main = "Thresholds vs. Positive Prediction Values",
sub = "Figure 4.1")
lines(fit1.threshold$threshold, fit1.ppv$ppv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.ppv$ppv, col="red", lwd=3)
legend("topleft",
c(paste0("finalfit"),
paste0("fit1"),
paste0("fit2")),
col=c("green", "blue", "red"),
lty=1)
# npv
plot(fit.final.threshold$threshold, fit.final.npv$npv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="npv",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 4.2")
lines(fit1.threshold$threshold, fit1.ppv$npv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.npv$npv, col="red", lwd=3)
legend("topleft",
c(paste0("finalfit"),
paste0("fit1"),
paste0("fit2")),
col=c("green", "blue", "red"),
lty=1)
fit.final.roc<- roc(hd_data.f$HD, aic_fit_final$fitted, plot=T, col="green")
fit.final.threshold <- coords(fit.final.roc, ret="threshold")
fit.final.ppv <- coords(fit.final.roc, ret="ppv")
fit.final.npv <- coords(fit.final.roc, ret="npv")
# ppv
plot(fit.final.threshold$threshold, fit.final.ppv$ppv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="ppv",
main = "Thresholds vs. Positive Prediction Values",
sub = "Figure 4.1")
lines(fit1.threshold$threshold, fit1.ppv$ppv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.ppv$ppv, col="red", lwd=3)
legend("center",
c(paste0("finalfit"),
paste0("fit1"),
paste0("fit2")),
col=c("green", "blue", "red"),
lty=1)
# npv
plot(fit.final.threshold$threshold, fit.final.npv$npv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="npv",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 4.2")
lines(fit1.threshold$threshold, fit1.ppv$npv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.npv$npv, col="red", lwd=3)
legend("center",
c(paste0("finalfit"),
paste0("fit1"),
paste0("fit2")),
col=c("green", "blue", "red"),
lty=1)
fit.final.roc<- roc(hd_data.f$HD, aic_fit_final$fitted, plot=T, col="green")
fit.final.threshold <- coords(fit.final.roc, ret="threshold")
fit.final.ppv <- coords(fit.final.roc, ret="ppv")
fit.final.npv <- coords(fit.final.roc, ret="npv")
# ppv
plot(fit.final.threshold$threshold, fit.final.ppv$ppv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="ppv",
main = "Thresholds vs. Positive Prediction Values",
sub = "Figure 4.1")
lines(fit1.threshold$threshold, fit1.ppv$ppv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.ppv$ppv, col="red", lwd=3)
# npv
plot(fit.final.threshold$threshold, fit.final.npv$npv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="npv",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 4.2")
lines(fit1.threshold$threshold, fit1.ppv$npv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.npv$npv, col="red", lwd=3)
fit.final.roc<- roc(hd_data.f$HD, aic_fit_final$fitted, plot=T, col="green")
fit.final.threshold <- coords(fit.final.roc, ret="threshold")
fit.final.ppv <- coords(fit.final.roc, ret="ppv")
fit.final.npv <- coords(fit.final.roc, ret="npv")
# ppv
plot(fit.final.threshold$threshold, fit.final.ppv$ppv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="ppv",
main = "Thresholds vs. Positive Prediction Values",
sub = "Figure 4.1")
lines(fit1.threshold$threshold, fit1.ppv$ppv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.ppv$ppv, col="red", lwd=3)
legend("bottomright",
c(paste0("finalfit"),
paste0("fit1"),
paste0("fit2")),
col=c("green", "blue", "red"),
lty=1)
# npv
plot(fit.final.threshold$threshold, fit.final.npv$npv, type="l", col="green", pch=16,
xlab="Threshold on prob",
ylab="npv",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 4.2")
lines(fit1.threshold$threshold, fit1.ppv$npv, col="blue", lwd=3)
lines(fit2.threshold$threshold, fit2.npv$npv, col="red", lwd=3)
legend("bottomright",
c(paste0("finalfit"),
paste0("fit1"),
paste0("fit2")),
col=c("green", "blue", "red"),
lty=1)
plot(fit.final.roc$threshold, fit1.npv$npv, type="l", col="blue", pch=16,
xlab="Threshold on prob",
ylab="False Positive",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 5.1")
nrows(fit.final.roc$threshold)
fit.final.roc$threshold
fit.final.roc
fit.final.roc$threshold
count(fit.final.roc$threshold)
fit.final.roc$threshold
table(fit.final.roc$threshold)
length(table(fit.final.roc$threshold)
length(table(fit.final.roc$threshold))
for(i in table(fit.final.roc$threshold)) {
fit.final.pred <- as.factor(ifelse(aic_fit_final$fitted > i, "1", "0"))
MCE.final.pred<- (10*sum(fit.final.pred.5[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.pred.5[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.final.pred
}
fit.final.pred
MCE.final.pred
MCE.final.pred
for(i in fit.final.roc$threshold) {
fit.final.pred <- as.factor(ifelse(aic_fit_final$fitted > i, "1", "0"))
MCE.final.pred <- (10*sum(fit.final.pred.5[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.pred.5[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.final.pred
}
fit.final.pred
fit.final.roc$threshold
MCE.final.pred
fit.final.roc$threshold
fit.final.pred
for(i in fit.final.roc$threshold) {
fit.final.pred <- as.factor(ifelse(aic_fit_final$fitted > i, "1", "0"))
MCE.final.pred <- (10*sum(fit.final.pred.5[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.pred.5[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.final.pred
}
plot(fit.final.roc$threshold, fit.final.pred, type="l", col="blue", pch=16,
xlab="Threshold on prob",
ylab="False Positive",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 5.1")
fit.final.pred
fit.final.roc$threshold
fit.final.10 <- as.factor(ifelse(aic_fit_final$fitted > .09, "1", "0"))
MCE.10 <- (10*sum(fit.final.10[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.10[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.10
fit.final.1 <- as.factor(ifelse(aic_fit_final$fitted > .09, "1", "0"))
MCE.1 <- (sum(fit.final.1[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.1[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.1
fit.final.1 <- as.factor(ifelse(aic_fit_final$fitted > .09, "1", "0"))
MCE.1 <- (sum(fit.final.1[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.1[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.1
for(i in fit.final.roc$threshold) {
fit.final.pred <- as.factor(ifelse(aic_fit_final$fitted > i, "1", "0"))
MCE.final.pred <- (10*sum(fit.final.pred.5[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.pred.5[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.final.pred
}
plot(fit.final.roc$threshold, fit.final.pred, type="l", col="blue", pch=16,
xlab="Threshold on prob",
ylab="False Positive",
main = "Thresholds vs. Negative Prediction Values",
sub = "Figure 5.1")
i
i
fit.final.roc$threshold
i in fit.final.roc$threshold[1,]
for(i in fit.final.roc$threshold[1,]) {
fit.final.pred <- as.factor(ifelse(aic_fit_final$fitted > i, "1", "0"))
MCE.final.pred <- (10*sum(fit.final.pred.5[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.pred.5[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.final.pred
}
for(i in fit.final.roc$threshold[2,]) {
fit.final.pred <- as.factor(ifelse(aic_fit_final$fitted > i, "1", "0"))
MCE.final.pred <- (10*sum(fit.final.pred.5[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.pred.5[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.final.pred
}
for(i in fit.final.roc$threshold) {
fit.final.pred <- as.factor(ifelse(aic_fit_final$fitted > i, "1", "0"))
MCE.final.pred <- (10*sum(fit.final.pred.5[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.pred.5[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.final.pred
}
fit.final.pred.5 <- as.factor(ifelse(aic_fit_final$fitted > 0.5, "1", "0"))
MCE.final.bayes <- (10*sum(fit.final.pred.5[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.pred.5[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.final.bayes
fit.final.pred.5 <- as.factor(ifelse(aic_fit_final$fitted > .09, "1", "0"))
MCE.final.bayes <- (10*sum(fit.final.pred.5[hd_data.f$HD == "1"] != "1")
+ sum(fit.final.pred.5[hd_data.f$HD == "0"] != "0"))/length(hd_data.f$HD)
MCE.final.bayes
fit.final.error<-data.frame(threshold = fitfinal.roc$thresholds,
error.risk10 =(10 * 307 * (1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities)) /length(hd_data.f$HD),
error.risk1 =(1 * 307 * (1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities)) /length(hd_data.f$HD))
fit.final.error<-data.frame(threshold = fit.final.roc$thresholds,
error.risk10 =(10 * 307 * (1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities)) /length(hd_data.f$HD),
error.risk1 =(1 * 307 * (1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities)) /length(hd_data.f$HD))
plot(fit.final.error$threshold,fit.final.error$error.risk10, col = "blue", pch = 16,
xlab = "threshold", ylab = "weighted misclassfication error", main = "threshold vs weighted misclassification error", ylim=c(0, 1))
fit.final.error <- data.frame(threshold = fit.final.roc$thresholds,
error.risk10 =(10*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD),
error.risk1 =(1*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD))
plot(fit.final.error$threshold, fit.final.error$error.risk10, col = "blue", pch = 16,
xlab = "threshold", ylab = "weighted misclassfication error", main = "threshold vs weighted
misclassification error", ylim=c(0, 1))
lines(fit.final.error$threshold, fit.final.error$error.risk1, col="red", lwd=3)
fit.final.error <- data.frame(threshold = fit.final.roc$thresholds,
error.risk10 =(10*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD),
error.risk1 =(1*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD))
plot(fit.final.error$threshold, fit.final.error$error.risk10, col = "blue", lwd=3, pch = 16,
xlab = "threshold", ylab = "weighted misclassfication error", main = "threshold vs weighted
misclassification error", ylim=c(0, 1))
lines(fit.final.error$threshold, fit.final.error$error.risk1, col="red", lwd=3)
fit.final.error <- data.frame(threshold = fit.final.roc$thresholds,
error.risk10 =(10*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD),
error.risk1 =(1*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD))
plot(fit.final.error$threshold, fit.final.error$error.risk10, col = "blue", pch = 16,
xlab = "threshold", ylab = "weighted misclassfication error", main = "threshold vs weighted
misclassification error", ylim=c(0, 1))
lines(fit.final.error$threshold, fit.final.error$error.risk1, col="red")
fit.final.error <- data.frame(threshold = fit.final.roc$thresholds,
error.risk10 =(10*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD),
error.risk1 =(1*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD))
plot(fit.final.error$threshold, fit.final.error$error.risk10, col = "blue", pch = 16,
xlab = "threshold", ylab = "weighted misclassfication error", main = "threshold vs weighted
misclassification error", ylim=c(0, 1))
lines(fit.final.error$threshold, fit.final.error$error.risk1, col="red", lwd=3)
fit.final.error <- data.frame(threshold = fit.final.roc$thresholds,
error.risk10 =(10*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD),
error.risk1 =(1*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD))
plot(fit.final.error$threshold, fit.final.error$error.risk10, col = "blue", pch = 3,
xlab = "threshold", ylab = "weighted misclassfication error", main = "threshold vs weighted
misclassification error", ylim=c(0, 1))
lines(fit.final.error$threshold, fit.final.error$error.risk1, col="red", lwd=3)
fit.final.error <- data.frame(threshold = fit.final.roc$thresholds,
error.risk10 =(10*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD),
error.risk1 =(1*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD))
plot(fit.final.error$threshold, fit.final.error$error.risk10, col = "blue", pch = 16,
xlab = "threshold", ylab = "weighted misclassfication error", main = "threshold vs weighted
misclassification error", ylim=c(0, 1))
lines(fit.final.error$threshold, fit.final.error$error.risk1, col="red", lwd=3)
fit.final.error <- data.frame(threshold = fit.final.roc$thresholds,
error.risk10 =(10*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD),
error.risk1 =(1*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD))
plot(fit.final.error$threshold, fit.final.error$error.risk10, col = "blue", pch = 16,
xlab = "threshold", ylab = "weighted misclassfication error", main = "threshold vs weighted
misclassification error")
lines(fit.final.error$threshold, fit.final.error$error.risk1, col="red", lwd=3)
fit.final.error <- data.frame(threshold = fit.final.roc$thresholds,
error.risk10 =(10*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD),
error.risk1 =(1*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD))
plot(fit.final.error$threshold, fit.final.error$error.risk10, col = "blue", pch = 16,
xlab = "threshold", ylab = "weighted misclassfication error", main = "threshold vs weighted
misclassification error", ylim=c(0, 1))
lines(fit.final.error$threshold, fit.final.error$error.risk1, col="red", lwd=3)
fit.final.error <- data.frame(threshold = fit.final.roc$thresholds,
error.risk10 =(10*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD),
error.risk1 =(1*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD))
plot(fit.final.error$threshold, fit.final.error$error.risk10, col = "blue", pch = 16,
xlab = "threshold", ylab = "weighted misclassfication error", main = "threshold vs weighted
misclassification error", ylim=c(0, 1))
lines(fit.final.error$threshold, fit.final.error$error.risk1, col="red", lwd=3, ylim=c(0, 1))
fit.final.error <- data.frame(threshold = fit.final.roc$thresholds,
error.risk10 =(10*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD),
error.risk1 =(1*307*(1-fit.final.roc$sensitivities)
+1*1086*(1-fit.final.roc$specificities))/length(hd_data.f$HD))
plot(fit.final.error$threshold, fit.final.error$error.risk10, col = "blue", pch = 16,
xlab = "threshold", ylab = "weighted misclassfication error", main = "threshold vs weighted
misclassification error", ylim=c(0, 1))
lines(fit.final.error$threshold, fit.final.error$error.risk1, col="red", lwd=3)
fit.final.roc<- roc(hd_data.f$HD, aic_fit_final$fitted, plot=T, col="green")
legend("bottomright",
c(paste0("fitfinal AUC=", round(aic_fit_final$auc,2))),
col=c("green"),
lty=1)
aic_fit_final$auc
aic_fit_final
